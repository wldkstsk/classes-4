<!doctype html> – 
<meta charset="UTF-8" /> 
<header> </header> 
<nav> </nav> 
<article><big> Command's description</big></article> 
<section> 

<p>1.<strong> git config --global user.email "" </strong>
The command serves  to set  email address after install github. This is important because every Git commit uses this information, and it’s immutably baked into the commits you start creating.
Example:<strong>$ git config --global user.email osatskyi@example.com</strong></p>
<p>2.<strong>git diff --staged</strong>
The command  will only show changes to files in the "staged" area, view difference between HEAD and Stage.</p>
<p>3.<strong>git checkout -b "branch"</strong>
The command creates a new branch in local repository and switches to it.
<p>4.<strong>git log --graph --all</strong> </br>
<strong>--graph</strong>
Draw a text-based graphical representation of the commit history on the left hand side of the output.
This may cause extra lines to be printed in between commits, in order for the graph history to bedrawn properly.
This enables parent rewriting.</br>
<strong>--all</strong> 
Shows all the branches instead of just current one.
(Pretend as if all the refs in refs/ are listed on the command line as <commit>)</p>
  <p>5.<strong>git branch -d "branch"</strong>
The command deletes a branch. The branch must be fully merged in its upstream branch, or in HEAD if no upstream
was set with --track or --set-upstream.</p>
<p>6.<strong>git fetch "remote" "branch"</strong>
The command downloads objects and refs from another repository.</p>
</section> 
<aside> </aside> 
<footer> </footer> 
